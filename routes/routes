// import express from 'express';
// import model from "../model/index.js"

// const router = express.Router()

// router.post('/post', (req, res) => {
//     const data = new model.dataSchema({
//         name: req.body.name,
//         age: req.body.age
//     })

//     try {
//         const dataToSave = data.save();
//         res.status(200).json(dataToSave)
//     }
//     catch (error) {
//         res.status(400).json({message: error.message})
//     }

// })

// //Get all Method
// router.get('/getAll', async (req, res) => {
//     try{
//         const data = await model.dataSchema.find();
//         res.json(data)
//     }
//     catch(error){
//         res.status(500).json({message: error.message})
//     }
// })

// //Get by ID Method
// router.get('/getOne/:id', async (req, res) => {
//     try{
//         const data = await model.dataSchema.findById(req.params.id);
//         res.json(data)
//     }
//     catch(error){
//         res.status(500).json({message: error.message})
//     }
// })



// //Update by ID Method
// router.patch('/update/:id', async (req, res) => {
//     try {
//         const id = req.params.id;
//         const updatedData = req.body;
//         const options = { new: true };

//         const result = await Model.findByIdAndUpdate(
//             id, updatedData, options
//         )

//         res.send(result)
//     }
//     catch (error) {
//         res.status(400).json({ message: error.message })
//     }
// })

// //Delete by ID Method
// router.delete('/delete/:id', async (req, res) => {
//     try {
//         const id = req.params.id;
//         const data = await Model.findByIdAndDelete(id)
//         res.send(`Document with ${data.name} has been deleted..`)
//     }
//     catch (error) {
//         res.status(400).json({ message: error.message })
//     }
// })











// // useless or test

// router.post('/post', (req, res) => {
//     res.send('Post API')
// })











// //Update by ID Method
// router.patch('/update/:id', (req, res) => {
//     res.send('Update by ID API')
// })

// //Delete by ID Method
// router.delete('/delete/:id', (req, res) => {
//     res.send('Delete by ID API')
// })


// //Get by ID Method
// router.get('/getOne/:id', (req, res) => {
//     res.send(req.params.id)
// })


// export default router;